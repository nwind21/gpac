language: c
compiler: gcc
before_install: 
  - sudo apt-get update -qq
install:
  - sudo apt-get install build-essential fakeroot dpkg-dev devscripts ccache debhelper pkg-config g++ 
  - sudo apt-get install -y zlib1g-dev libfreetype6-dev libjpeg62-dev libpng12-dev libopenjpeg-dev libmad0-dev libfaad-dev libogg-dev libvorbis-dev libtheora-dev liba52-0.7.4-dev libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libxv-dev x11proto-video-dev libgl1-mesa-dev x11proto-gl-dev linux-sound-base libxvidcore-dev libssl-dev libjack-dev libasound2-dev libpulse-dev libsdl1.2-dev dvb-apps libavcodec-extra-53 libavdevice-dev libmozjs185-dev
  - sudo apt-get install -y gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev
env:
  - GPAC_CONFIGURE_PREFIX="--prefix=build/all" GPAC_CONFIGURE_OPTIONS="" GPAC_CONFIGURE_ECFLAGS="" GPAC_CONFIGURE_ELDFLAGS="" GPAC_CONFIGURE_CROSS="" TARGET=""  GPAC_OUT="all"

 
script: 
  - ./configure $GPAC_CONFIGURE_PREFIX $GPAC_CONFIGURE_OPTIONS --extra-cflags="$GPAC_CONFIGURE_ECFLAGS" --extra-ldflags="$GPAC_CONFIGURE_ELDFLAGS" && make clean && make $TARGET && make install
  - ls ./bin/gcc
  - mkdir ./$GPAC_OUT
  - ls .
  - rm -rf ./bin/gcc/temp
  - cp ./bin/gcc/* ./$GPAC_OUT

deploy:
  provider: s3
  access_key_id: AKIAIHY6XN3GGCPPGCIA
  secret_access_key:
    secure: DiF/9xN2wsNc/YkNiiKztKrcdURG+p72vkmKe/ZD5EyoPB695wsEsGPy0G898GP7iyoZo3an3R+puinmWYz9OTTT4Qt0ZnNbwMNRXAxNiwCJFOItHyZ12yRMk7c9gZ/0fcALey3BS0xSZ039B8PBWTct1pA0UETq6mXLAWILAQo=
  skip_cleanup: true
  bucket: gpac-travis
  local_dir: ./$GPAC_OUT
  upload-dir: $GPAC_OUT
